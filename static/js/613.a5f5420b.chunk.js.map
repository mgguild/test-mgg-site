{"version":3,"file":"static/js/613.a5f5420b.chunk.js","mappings":"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","sources":["Pages/Staking/styled.tsx","hooks/useFetchCoinsData.ts","Pages/Staking/staking.tsx","contexts/RefreshContext.tsx","hooks/useRefresh.ts","utils/bigNumber.ts","utils/formatBalance.ts"],"sourcesContent":["import styled from 'styled-components'\nimport { Flex, Heading, Button } from '@metagg/mgg-uikit'\nimport BGimage from '../../assets/background/BGStaking1.png'\n\nexport const Card = styled.div`\n  background-color: #0c012c;\n  border: #008ffd 0.15rem solid;\n  border-radius: 0.5rem;\n  padding: 3rem;\n  z-index: 3;\n  margin: 1rem;\n  text-align: center;\n`\n\nexport const Btn = styled(Button)`\n  border-radius: 2rem;\n  width: 250px;\n  background-color: rgb(0, 196, 204);\n  color: black;\n  \n`\n\nexport const InformativeButton = styled(Button)`\n  width: 150px;\n  height: 45px;\n  margin: 0.5rem 0;\n  position: relative;\n  padding: 1px;\n\n  background-image: linear-gradient(blue, skyblue);\n  border: none;\n  border-radius: 4px;\n  transition: box-shadow 0.3s ease-in-out, background-image 0.3s ease-in-out; /* Smooth transition for color */\n  &:hover {\n    background-image: linear-gradient( skyblue, blue); /* New gradient on hover */\n  }\n`;\n\n\n\n\nexport const CardContainer = styled.div`\n  flex: 1;\n  max-width: 26rem;\n  min-width: 16rem;\n  position: relative;\n`\n\nexport const RdmapList = styled.ul`\n  text-align: left;\n  color: white;\n  list-style-type: none;\n  line-height: 1.5;\n  font-weight: 400;\n`\n\nexport const CheckList = styled.li`\n  padding: 1rem 0 0 1rem;\n  &:before{\n    content: \"✔\";\n    color: #06ff65;\n    font-weight: bold;\n    display: inline-block;\n    width: 1rem;\n    margin-left: -1rem;\n  }\n`\n\nexport const List = styled.li`\n  padding: 1rem 0 0 1rem;\n  &:before{\n    content: \"●\";\n    color: #fdda00;\n    font-weight: bold;\n    display: inline-block;\n    width: 1rem;\n    margin-left: -1rem;\n  }\n`\n\nexport const BgPage = styled.div<{padding?: string}>`\n  padding: ${({padding}) => padding ? padding: '5rem 0'};\n  text-align: center;\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  position: relative;\n  & .pad-5rem {\n    padding: 3rem;\n    @media screen and (max-width: 500px) {\n      padding: 2rem 0;\n    }\n  }\n  & .pad-10rem {\n    padding: 10rem;\n    @media screen and (max-width: 500px) {\n      padding: 5rem 0;\n    }\n  }\n  &:before {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 0;\n    background-image: url(${BGimage});\n    background-repeat: no-repeat;\n    background-position: center;\n    background-size: cover;\n  }\n\n  @media screen and (max-width: 500px) {\n    padding: 0.5rem;\n  }\n`\n\n\nexport const HeadingGlow = styled(Heading)<{ glow?: string }>`\n  text-shadow: 0 0 0.5rem ${({ glow }) => (glow ??'#00f4fd')};\n`\n","import { useEffect, useState } from \"react\";\nimport useRefresh from \"./useRefresh\";\nimport { RONValidator, CMCQuoteData, RIOValidatorDelegation } from \"config/constants/types\";\n\nconst url = \"https://ronin-node-server.vercel.app\";\n\ninterface CoinsData {\n    validator: RONValidator | RIOValidatorDelegation;\n    market: CMCQuoteData;\n    price?: string;\n    totalStaked?: string;\n    apr?: string;\n}\n\nconst formatTotalStaked = (value: string) => {\n    if (!value) return \"TBA\";\n    try {\n        const scaledValue = parseFloat(value) / 1e18;\n        // Format to 2 decimal places with commas\n        return scaledValue.toLocaleString(\"en-US\", { minimumFractionDigits: 2, maximumFractionDigits: 2 }) + \" RIO\";\n    } catch (error) {\n        console.error(\"Error formatting total staked:\", error);\n        return \"TBA\";\n    }\n};\n\nconst useFetchCoinsData = () => {\n    const { fastRefresh } = useRefresh();\n    const [RONData, setRONData] = useState<CoinsData>();\n    const [RIOData, setRIOData] = useState<CoinsData>();\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                //FETCH VALIDATOR DATA\n                //RON VALIDATOR\n                console.log(\"Fetching RON validator data...\");\n                let response = await fetch(`${url}/getRoninValidator`, {\n                    headers: { \"content-type\": \"application/json\" }\n                });\n\n                if (!response.ok) {\n                    throw new Error(\"Failed to fetch validator data\");\n                }\n\n                const RONValidatorData = await response.json();\n                console.log(\"RON Validator data:\", RONValidatorData);\n\n                //RIO VALIDATOR\n                console.log(\"Fetching RIO validator data...\");\n                response = await fetch(`${url}/getRioValidator`, {\n                    headers: { \"content-type\": \"application/json\" }\n                });\n\n                if (!response.ok) {\n                    throw new Error(\"Failed to fetch validator data\");\n                }\n\n                const res = await response.json();\n                const RIOValidatorData: RIOValidatorDelegation = res.data;\n                console.log(\"RIO Validator data:\", RIOValidatorData);\n\n                //FETCH MARKET DATA\n                console.log(\"Fetching market data...\");\n                response = await fetch(`${url}/getCoinsMarket`, {\n                    headers: { \"content-type\": \"application/json\" }\n                });\n\n                if (!response.ok) {\n                    throw new Error(\"Failed to fetch market data\");\n                }\n\n                const raw2TotalStaked = RIOValidatorData.delegation_responses.length > 0 ? RIOValidatorData.delegation_responses[0].balance.amount : \"\";\n                console.log(\"Raw Total Staked:\", raw2TotalStaked);\n\n                const formatted2TotalStaked = formatTotalStaked(raw2TotalStaked);\n                console.log(\"Formatted Total Staked:\", formatted2TotalStaked);\n\n                const marketData = await response.json();\n                console.log(\"Market data structure:\", marketData);\n\n                const rawTotalStaked = RONValidatorData.Validator?.totalStaked ? RONValidatorData.Validator.totalStaked.toString() : \"\";\n                console.log(\"Raw Total Staked (before truncation):\", rawTotalStaked);\n\n                const truncatedTotalStaked = rawTotalStaked.length > 18 ? rawTotalStaked.slice(0, -18) : rawTotalStaked;\n                console.log(\"Truncated Total Staked (after removing 18 digits):\", truncatedTotalStaked);\n\n                const formattedTotalStaked = truncatedTotalStaked\n                    ? parseFloat(truncatedTotalStaked).toLocaleString(\"en-US\", { maximumFractionDigits: 0 })\n                    : \"TBA\";\n\n                const formattedApr = RONValidatorData.Validator?.apr\n                    ? parseFloat(RONValidatorData.Validator.apr).toFixed(2)\n                    : \"TBA\";\n\n                const formattedPrice =\n                    marketData.data?.price && !isNaN(Number(marketData.data.price))\n                        ? Number(marketData.data.price).toFixed(2)\n                        : \"TBA\";\n\n                console.log(\"Formatted price:\", formattedPrice);\n\n                setRONData({\n                    validator: RONValidatorData.Validator,\n                    market: marketData.data[\"14101\"],\n                    price: formattedPrice,\n                    totalStaked: formattedTotalStaked,\n                    apr: formattedApr,\n                });\n\n                setRIOData({\n                    validator: RIOValidatorData,\n                    market: marketData.data[\"4166\"],\n                    totalStaked: formatted2TotalStaked,\n                })\n            } catch (error) {\n                console.error(\"Error fetching Ronin data:\", error);\n            }\n        };\n\n        fetchData();\n    }, [fastRefresh]);\n\n    return {RONData: RONData, RIOData: RIOData};\n};\n\nexport default useFetchCoinsData;\n","import React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { Flex, Heading, Text } from '@metagg/mgg-uikit';\nimport styled, { ThemeContext } from 'styled-components';\nimport { BgPage, Btn, Card, HeadingGlow, InformativeButton } from './styled';\nimport useWeb3 from \"../../hooks/useWeb3\";\nimport { getBalanceAmount, getBalanceNumber, toBigNumber, formatNumber, getFullDisplayBalance } from \"../../utils/formatBalance\";\nimport useFetchCoinsData from 'hooks/useFetchCoinsData';\nimport LogoRonin from '../../assets/images/Logo_Ronin.png';\nimport CarvIcon from '../../assets/images/Logo_Carv.png';\nimport NearIcon from '../../assets/images/near.png';\nimport StakingImg from '../../assets/images/Staking4.png';\nimport RioImg from '../../assets/images/rio_icon.png';\nimport Page from 'components/layout/Page';\nimport { RIOValidatorDelegation } from 'config/constants/types';\n\nconst TableDesc = styled.div`\n  text-align: center;\n  font-size: 1.2rem;\n\n  @media screen and (max-width: 600px) {\n    font-size: 0.9rem;\n  }\n`;\n\nconst TableDesc2 = styled.div`\n  text-align: center;\n  font-size: 1.2rem;\n  color: white;\n\n  @media screen and (max-width: 600px) {\n    font-size: 0.8rem;\n  }\n`;\n\nconst DescText = styled.div`\n  margin-top: 0.5rem;\n  font-size: 1.2rem;\n  color: white;\n\n  @media screen and (max-width: 500px) {\n    font-size: 1rem;\n  }\n`;\n\nconst InfoSection = styled(Flex)`\n  margin-top: 1.5rem;\n  font-size: 1rem;\n  color: white;\n  text-align: justify;\n\n  @media screen and (max-width: 768px) {\n    margin-top: 1rem;\n    font-size: 0.9rem;\n    text-align: left; /* Align text left for mobile */\n  }\n`;\n\n\nconst TableRowContent = styled(Flex)`\n  align-items: center;\n  gap: 1rem;\n\n  @media screen and (max-width: 600px) {\n    flex-direction: column;\n    gap: 1.5rem; /* Reduce gap for mobile */\n  }\n`;\n\nconst StakingCard = styled(Card)`\n  padding: 2rem;\n  text-align: center;\n  border: 1px solid #1E90FF;\n  background-color: #0c0f2c;\n  width: 100%;\n  max-width: 365px;\n  margin: 1rem;\n  transition: background-color 0.3s ease, border-color 0.3s ease, box-shadow 0.3s ease; /* Smooth transition */\n  \n  &:hover {\n    border-color: #DAF7A6; /* Change to highlight color on hover */\n    box-shadow: 0 0 8px 2px #DAF7A6; /* Optional shadow effect for highlight */\n  }\n\n  @media screen and (max-width: 600px) {\n    padding: 1.5rem; /* Adjust padding */\n    margin: 0.5rem; /* Adjust margin */\n    width: 100%; /* Ensure it takes full width */\n  }\n`;\n\nconst AnimatedText = styled(DescText)`\n  display: inline-block;\n  animation: slide 15s linear infinite; // Customize timing as needed\n\n  @keyframes slide {\n    from {\n      transform: translateX(120%); // Start from right side outside the view\n    }\n    to {\n      transform: translateX(-120%); // End on the left side outside the view\n    }\n  }\n`;\n\nconst DescTextContainer = styled.div`\n  padding-left: 12rem;\n  padding-right: 0rem;\n  overflow: hidden; \n  white-space: nowrap; \n  width: 115%;\n`;\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center; /* Align text within columns */\n  justify-content: flex-end;\n  width: 300px; /* Set consistent width */\n  color: #FFD700;\n \n  @media screen and (max-width: 600px) {\n    width: 80px; /* Adjust for smaller screens */\n    align-items: center; /* Center for mobile */\n  }\n`;\n\nconst TableRowAligned = styled(Flex)`\n  width: 100%;\n  max-width: 1200px;\n  justify-content: center;\n  align-items: center;\n  padding: 1rem;\n  border: 1px solid #1E90FF;\n  border-radius: 8px;\n  background-color: #0c0f2c;\n  margin-bottom: 1rem;\n  transition: background-color 0.3s ease, border-color 0.3s ease, box-shadow 0.3s ease; /* Smooth transition */\n  &:hover {\n    border-color: #DAF7A6; \n    box-shadow: 0 0 8px 2px #DAF7A6; /* Optional shadow effect for highlight */\n  }\n  @media screen and (max-width: 600px) {\n    flex-direction: column;\n  }\n`;\n\nconst ResponsiveFlex = styled(Flex)`\n  width: 100%;\n  justify-content: flex-end;\n\n  // Mobile responsiveness\n  @media (max-width: 768px) {\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    padding-top: 2rem;\n    column {\n      margin-bottom: 16px;\n    }\n  }\n`;\n\nconst StakingTable = ({ logo, name, price, totalStake, apr }: any) => (\n  <TableRowAligned>\n    <TableRowContent>\n      <img src={logo} alt={name} style={{ width: '50px', height: '50px' }} />\n      <Heading size=\"xl\" color=\"white\">{name}</Heading>\n    </TableRowContent>\n    <ResponsiveFlex>\n      <Column>\n        <TableDesc>Price:</TableDesc>\n        <TableDesc2>$ {price}</TableDesc2>\n      </Column>\n      <Column>\n        <TableDesc>Total Stake:</TableDesc>\n        <TableDesc2>{totalStake}</TableDesc2>\n      </Column>\n      <Column>\n        <TableDesc>APR:</TableDesc>\n        <TableDesc2>{apr}</TableDesc2>\n      </Column>\n    </ResponsiveFlex>\n  </TableRowAligned>\n);\n\n\nconst Staking: React.FC = () => {\n  // const theme = useContext(ThemeContext);\n  // const web3 = useWeb3();\n  const {RONData, RIOData} = useFetchCoinsData();\n\n  const [RONprice, setRONPrice] = useState<any>(\"TBA\");\n  const [RONTotalStaked, setRONTotalStaked] = useState(\"TBA\");\n  const [RONApr, setRONApr] = useState(\"TBA\");\n\n  const [RIOprice, setRIOPrice] = useState<any>(\"TBA\");\n  const [RIOTotalStaked, setRIOTotalStaked] = useState<string>(\"TBA\");\n  const [RIOApr, setRIOApr] = useState(\"TBA\");\n\n  useEffect(() => {\n    if (RONData) {\n      console.log('Fetched roninData:', RONData);\n      setRONPrice(RONData.market.quote.USD.price ?? \"TBA\");\n      setRONTotalStaked(RONData.totalStaked ?? \"TBA\");\n      setRONApr(RONData.apr ?? \"TBA\");\n    }\n\n    if (RIOData) {\n      console.log('Fetched RIO Data:', RIOData);\n      setRIOPrice(RIOData.market.quote.USD.price ?? \"TBA\");\n      setRIOTotalStaked((RIOData.validator as RIOValidatorDelegation).delegation_responses.length > 0 ?\n                        (RIOData.validator as RIOValidatorDelegation).delegation_responses[0].balance.amount : \"TBA\");\n      setRIOApr(RIOData.apr ?? \"TBA\");\n    }\n  }, [RONData, RIOData]);\n\n  return (\n    <Page>\n    <BgPage padding=\"0\">\n      <div style={{ position: 'relative', zIndex: 2 }}>\n        <div style={{ margin: '0rem 0', padding: window.innerWidth <= 768 ? '0rem' : '8rem', paddingTop: window.innerWidth <= 768 ? '5rem' : '8rem', }}>\n          <div style={{ display: 'inline-flex', gap: window.innerWidth <= 768 ? '3rem' : '17rem', justifyContent: 'space-around', flexWrap: 'wrap' }}>\n            <div style={{ textAlign: 'left', alignContent: 'center' }}>\n              <HeadingGlow size=\"xxl\" color=\"#fdda00\" glow=\"#fdda00\" marginBottom= '1rem'>\n                Earn Staking Rewards\n              </HeadingGlow>\n              <br />\n              <DescText>Stake your RON, CARV, and earn rewards.</DescText>\n            </div>\n            <div style={{ margin: '10px' }}>\n              <img src={StakingImg} alt=\"Guild Rewards\" width={300} />\n            </div>\n          </div>\n          <div style={{ display: 'inline-grid',  justifyContent: 'space-around', flexWrap: 'wrap', paddingRight: window.innerWidth <= 768 ? '0rem' : '10rem', paddingTop: window.innerWidth <= 768 ? '4rem' : '3rem', paddingBottom: window.innerWidth <= 768 ? '2rem' : '3rem'}}>\n            <DescTextContainer>\n              <AnimatedText style={{ color: 'yellow' }}>\n                Stake your RONIN Tokens today and join the MGG Airdrop with a reward pool valued at $50,000.\n              </AnimatedText>\n            </DescTextContainer>\n            </div>\n\n            <Flex flexDirection=\"column\" alignItems=\"center\" style={{ margin: '4rem 0 3rem 0rem', gap: '3rem' }}>\n            <StakingTable\n              logo={LogoRonin}\n              name=\"RON\"\n              price={parseFloat(RONprice).toFixed(2)}\n              totalStake={`${RONTotalStaked} RON`}\n              apr={`11.18/${RONApr}%`}\n            />\n            <StakingTable\n              logo={RioImg}\n              name=\"RIO\"\n              price={parseFloat(RIOprice).toFixed(4)}\n              totalStake={`${getFullDisplayBalance(toBigNumber(RIOTotalStaked), 18, 2)} RIO`}\n              apr={RIOApr !== \"TBA\" ? `${RIOApr}%` : \"-\"}\n            />\n\n          </Flex>\n\n\n          <Flex justifyContent=\"center\" flexWrap=\"wrap\" style={{ gap: '1rem' }}>\n            <StakingCard style={{ minHeight: '420px', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n              <img src={LogoRonin} alt=\"RONIN\" style={{ width: '95px', height: '95px', marginBottom: '2rem' }} />\n              <Heading size=\"l\" color=\"cyan\"marginTop={\"1rem\"}>RONIN</Heading>\n              <InfoSection color=\"white\" style={{ textAlign: 'justify' }}>\n                Ronin Token is the native cryptocurrency of the Ronin blockchain, designed specifically for gaming and digital asset ownership.\n              </InfoSection>\n              <a href=\"https://app.roninchain.com/validator/0xea94e2f3f1b24214f9d9bfb5608084476f34d48a\" target=\"_blank\" rel=\"noopener noreferrer\" style={{ textDecoration: 'none', marginTop: 'auto' }}>\n                <InformativeButton style={{ marginTop: '2rem' }}>Stake</InformativeButton>\n              </a>\n            </StakingCard>\n            <StakingCard style={{ minHeight: '420px', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n              <img src={CarvIcon} alt=\"CARV\" style={{ width: '95px', height: '95px', marginBottom: '2rem' }} />\n              <Heading size=\"l\" color=\"cyan\" marginTop={\"1rem\"}>CARV</Heading>\n              <InfoSection color=\"white\" style={{ textAlign: 'justify' }}>\n                Carv Token is a utility cryptocurrency designed to enhance the Carv ecosystem, which focuses on decentralized social networking and user-generated content.\n              </InfoSection>\n              <a href=\"https://explorer.carv.io/verifiers\" target=\"_blank\" rel=\"noopener noreferrer\" style={{ textDecoration: 'none', marginTop: 'auto' }}>\n                <InformativeButton style={{ marginTop: '2rem' }}>Stake</InformativeButton>\n              </a>\n            </StakingCard>\n            <StakingCard style={{ minHeight: '420px', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n              <img src={RioImg} alt=\"CARV\" style={{ width: '95px', height: '95px', marginBottom: '2rem' }} />\n              <Heading size=\"l\" color=\"cyan\" marginTop={\"1rem\"}>RIO</Heading>\n              <InfoSection color=\"white\" style={{ textAlign: 'justify' }}>\n                The Realio Network (RIO) is a cryptocurrency and utility token that serves as the native currency for the Realio Network platform. This platform is a comprehensive Software as a Service (SaaS) designed to tokenize real-world assets (RWAs) on the blockchain.\n              </InfoSection>\n              <a href=\"https://app.realio.network/validator/realiovaloper12szn0m0w5sjs0nkw0s8ws8y5d0g69303uuuray\" target=\"_blank\" rel=\"noopener noreferrer\" style={{ textDecoration: 'none', marginTop: 'auto' }}>\n                <InformativeButton style={{ marginTop: '2rem' }}>Stake</InformativeButton>\n              </a>\n            </StakingCard>\n          </Flex>\n          <Flex justifyContent=\"center\" flexWrap=\"wrap\" style={{ gap: '1rem' }}>\n            <StakingCard style={{ minHeight: '420px', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n              <img src={NearIcon} alt=\"CARV\" style={{ width: '95px', height: '95px', marginBottom: '2rem' }} />\n              <Heading size=\"l\" color=\"cyan\" marginTop={\"1rem\"}>NEAR</Heading>\n              <InfoSection color=\"white\" style={{ textAlign: 'justify' }}>\n              NEAR's native token is also called NEAR, and is used to pay for transaction fees and storage. NEAR tokens can also be staked by token holders who participate in achieving network consensus as transaction validators. NEAR Protocol is focused on creating a developer and user friendly platform.\n              </InfoSection>\n              <a href=\"https://app.mynearwallet.com/staking/metagamingguild.poolv1.near\" target=\"_blank\" rel=\"noopener noreferrer\" style={{ textDecoration: 'none', marginTop: 'auto' }}>\n                <InformativeButton style={{ marginTop: '2rem' }}>Stake</InformativeButton>\n              </a>\n            </StakingCard>\n            </Flex>\n        </div>\n      </div>\n    </BgPage>\n    </Page>\n  );\n};\n\nexport default Staking;\n","import React, { useState, useEffect } from 'react'\nimport useTabVisibility from 'hooks/useTabVisibility'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n  const { tabVisibleRef } = useTabVisibility()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (tabVisibleRef.current) {\n        setFast((prev) => prev + 1)\n      }\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [tabVisibleRef])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (tabVisibleRef.current) {\n        setSlow((prev) => prev + 1)\n      }\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [tabVisibleRef])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import {useContext} from 'react'\nimport {RefreshContext} from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n    const {fast, slow} = useContext(RefreshContext)\n    return {fastRefresh: fast, slowRefresh: slow}\n}\n\nexport default useRefresh\n","import BigNumber from 'bignumber.js'\n\nexport const BIG_ZERO = new BigNumber(0)\nexport const BIG_ONE = new BigNumber(1)\nexport const BIG_NINE = new BigNumber(9)\nexport const BIG_TEN = new BigNumber(10)\n","import BigNumber from 'bignumber.js'\nimport {BIG_TEN} from './bigNumber'\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const toBigNumber = (amount: string) => {\n    return new BigNumber(amount)\n}\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\n    return new BigNumber(amount).times(BIG_TEN.pow(decimals))\n}\n\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\n    return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\n}\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n    return getBalanceAmount(balance, decimals).toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, decimalsToAppear?: number) => {\n    return getBalanceAmount(balance, decimals).toFixed(decimalsToAppear)\n}\n\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n    const options = {\n        minimumFractionDigits: minPrecision,\n        maximumFractionDigits: maxPrecision,\n    }\n    return number.toLocaleString(undefined, options)\n}\n"],"names":["Card","styled","InformativeButton","Button","BgPage","padding","BGimage","HeadingGlow","Heading","glow","url","formatTotalStaked","value","parseFloat","toLocaleString","minimumFractionDigits","maximumFractionDigits","error","console","fastRefresh","useRefresh","useState","RONData","setRONData","RIOData","setRIOData","useEffect","fetchData","log","fetch","headers","response","ok","Error","json","RONValidatorData","res","RIOValidatorData","data","raw2TotalStaked","delegation_responses","length","balance","amount","formatted2TotalStaked","marketData","rawTotalStaked","Validator","totalStaked","toString","truncatedTotalStaked","slice","formattedTotalStaked","formattedApr","apr","toFixed","formattedPrice","price","isNaN","Number","validator","market","TableDesc","TableDesc2","DescText","InfoSection","Flex","TableRowContent","StakingCard","AnimatedText","DescTextContainer","Column","TableRowAligned","ResponsiveFlex","StakingTable","logo","name","totalStake","src","alt","style","width","height","size","color","useFetchCoinsData","RONprice","setRONPrice","RONTotalStaked","setRONTotalStaked","RONApr","setRONApr","RIOprice","setRIOPrice","RIOTotalStaked","setRIOTotalStaked","RIOApr","setRIOApr","quote","USD","Page","position","zIndex","margin","window","innerWidth","paddingTop","display","gap","justifyContent","flexWrap","textAlign","alignContent","marginBottom","StakingImg","paddingRight","paddingBottom","flexDirection","alignItems","LogoRonin","RioImg","getFullDisplayBalance","toBigNumber","minHeight","marginTop","href","target","rel","textDecoration","NearIcon","RefreshContext","React","slow","fast","useContext","slowRefresh","BIG_TEN","BigNumber","getBalanceAmount","decimals","dividedBy","getBalanceNumber","toNumber","decimalsToAppear"],"sourceRoot":""}