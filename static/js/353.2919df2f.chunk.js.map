{"version":3,"file":"static/js/353.2919df2f.chunk.js","mappings":"iTAIaA,EAAOC,EAAAA,GAAAA,IAAH,2LAkBJC,IARMD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,gKAQiBA,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,8YA0DjBG,GAvCgBH,EAAAA,GAAAA,IAAH,qGAODA,EAAAA,GAAAA,GAAH,kIAQGA,EAAAA,GAAAA,GAAH,iNAYFA,EAAAA,GAAAA,GAAH,iNAYKA,EAAAA,GAAAA,IAAH,ktBACN,gBAAEI,EAAF,EAAEA,QAAF,OAAeA,GAAmB,WA0BnBC,IAYfC,GAAcN,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAH,wDACI,gBAAGQ,EAAH,EAAGA,KAAH,cAAeA,QAAf,IAAeA,EAAAA,EAAO,a,smHC5G5CC,EAAYT,EAAAA,GAAAA,IAAH,4IASTU,EAAaV,EAAAA,GAAAA,IAAH,+JAUVW,EAAWX,EAAAA,GAAAA,IAAH,6JAURY,GAAcZ,EAAAA,EAAAA,IAAOa,EAAAA,GAAPb,CAAH,oQAaXc,GAAWd,EAAAA,EAAAA,IAAOa,EAAAA,GAAPb,CAAH,8ZAkBRe,GAAkBf,EAAAA,EAAAA,IAAOa,EAAAA,GAAPb,CAAH,0LAUfgB,GAAchB,EAAAA,EAAAA,IAAOD,EAAPC,CAAH,8dA8GjB,EA1F0B,YACViB,EAAAA,EAAAA,YAAWC,EAAAA,KACZC,EAAAA,EAAAA,KADb,IAEA,GAAwCC,EAAAA,EAAAA,WAAS,GAAjD,eACA,GADA,WAC0BA,EAAAA,EAAAA,UAAS,QAAnC,eACA,GADA,WACoCA,EAAAA,EAAAA,UAAS,QAA7C,eACA,GADA,WACsBA,EAAAA,EAAAA,UAAS,QAA/B,yBAMA,OAJAC,EAAAA,EAAAA,YAAU,cAEP,KAGD,SAACC,EAAA,EAAD,WACA,SAACnB,EAAD,CAAQC,QAAQ,IAAhB,UACE,gBAAKmB,MAAO,CAAEC,SAAU,WAAYC,OAAQ,GAA5C,UACE,iBAAKF,MAAO,CAAEG,OAAQ,SAAUtB,QAASuB,OAAOC,YAAc,IAAM,OAAS,OAAQC,WAAYF,OAAOC,YAAc,IAAM,OAAS,QAArI,WACE,iBAAKL,MAAO,CAAEO,QAAS,cAAeC,IAAK,OAAQC,eAAgB,eAAgBC,SAAU,QAA7F,WACE,iBAAKV,MAAO,CAAEW,UAAW,OAAQC,aAAc,UAA/C,WACE,SAAC7B,EAAD,CAAa8B,KAAK,MAAMC,MAAM,UAAU7B,KAAK,UAAU8B,aAAc,OAArE,mCAGA,mBACA,SAAC3B,EAAD,0DAEF,gBAAKY,MAAO,CAAEG,OAAQ,QAAtB,UACE,gBAAKa,IAAKC,EAAYC,IAAI,gBAAgBC,MAAO,YAIrD,SAAC,KAAD,CAAMC,cAAc,SAASC,WAAW,SAASrB,MAAO,CAAEG,OAAQ,oBAAlE,UACE,UAACZ,EAAD,YACE,UAACC,EAAD,YACE,gBAAKwB,IAAKM,EAAWJ,IAAI,MAAMlB,MAAO,CAAEmB,MAAO,OAAQI,OAAQ,WAC/D,SAAC,KAAD,CAASV,KAAK,KAAKC,MAAM,QAAzB,qBAEF,UAAC,KAAD,CACMd,MAAO,CACLQ,IAAKJ,OAAOC,YAAc,IAAM,OAAS,QACzCS,MAAO,UACPU,aAAcpB,OAAOC,YAAc,IAAM,OAAS,QAClDC,WAAYF,OAAOC,YAAc,IAAM,OAAS,OAChDgB,WAAY,UANpB,WASE,iBAAKrB,MAAO,CAAEO,QAAS,OAAQa,cAAe,SAAUN,MAAO,WAA/D,WACE,SAAC5B,EAAD,CAAW4B,MAAM,UAAjB,qBACA,SAAC3B,EAAD,wBAEF,iBAAKa,MAAO,CAAEO,QAAS,OAAQa,cAAe,SAAUN,MAAO,WAA/D,WACE,SAAC5B,EAAD,CAAW4B,MAAM,UAAjB,2BACA,SAAC3B,EAAD,gCAEF,iBAAKa,MAAO,CAAEO,QAAS,OAAQa,cAAe,SAAUN,MAAO,WAA/D,WACE,SAAC5B,EAAD,CAAW4B,MAAM,UAAjB,mBACA,SAAC3B,EAAD,sCAMR,UAAC,KAAD,CAAMsB,eAAe,SAASC,SAAS,OAAOV,MAAO,CAAEQ,IAAK,QAA5D,WACE,UAACf,EAAD,CAAaO,MAAO,CAAEyB,UAAW,QAASlB,QAAS,OAAQa,cAAe,SAAUC,WAAY,UAAhG,WACE,gBAAKL,IAAKM,EAAWJ,IAAI,QAAQlB,MAAO,CAAEmB,MAAO,OAAQI,OAAQ,OAAQR,aAAc,WACvF,SAAC,KAAD,CAASF,KAAK,IAAIC,MAAM,OAAMY,UAAW,OAAzC,oBACA,SAACrC,EAAD,CAAayB,MAAM,QAAQd,MAAO,CAAEW,UAAW,WAA/C,8IAGA,cAAGgB,KAAK,kFAAkF3B,MAAO,CAAE4B,eAAgB,OAAQF,UAAW,QAAtI,UACE,SAAChD,EAAD,CAAmBsB,MAAO,CAAE0B,UAAW,QAAvC,yBAGJ,UAACjC,EAAD,CAAaO,MAAO,CAAEyB,UAAW,QAASlB,QAAS,OAAQa,cAAe,SAAUC,WAAY,UAAhG,WACE,gBAAKL,I,qgJAAeE,IAAI,OAAOlB,MAAO,CAAEmB,MAAO,OAAQI,OAAQ,OAAQR,aAAc,WACrF,SAAC,KAAD,CAASF,KAAK,IAAIC,MAAM,OAAOY,UAAW,OAA1C,mBACA,SAACrC,EAAD,CAAayB,MAAM,QAAQd,MAAO,CAAEW,UAAW,WAA/C,0KAGA,cAAGgB,KAAK,qCAAqC3B,MAAO,CAAE4B,eAAgB,OAAQF,UAAW,QAAzF,UACE,SAAChD,EAAD,CAAmBsB,MAAO,CAAE0B,UAAW,QAAvC,sC,sGC3JhB,IAhBgB,WACZ,OAA2BG,EAAAA,EAAAA,MAApBC,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,QACVC,GAASC,EAAAA,EAAAA,QAAOH,GAChBI,GAAgBC,EAAAA,EAAAA,GAAgB,OAACJ,QAAD,IAACA,OAAD,EAACA,EAASK,YAChD,GAAwBvC,EAAAA,EAAAA,UAASiC,EAAU,IAAIO,IAAJ,CAASP,GAAWI,GAA/D,eAAOI,EAAP,KAAaC,EAAb,KASA,OAPAzC,EAAAA,EAAAA,YAAU,WACFgC,IAAYE,EAAOQ,UACnBD,EAAQT,EAAU,IAAIO,IAAJ,CAASP,GAAWI,GACtCF,EAAOQ,QAAUV,KAEtB,CAACA,IAEGQ,I,qGCnBEH,EAAmB,SAACJ,EAASO,GACtC,IAAMG,GAAWC,EAAAA,EAAAA,IAAUX,GACrBY,EAAW,IAAIN,IAAAA,UAAAA,cAA4BI,EAAU,CAAEG,QAAS,MAEtE,OAAO,IAAIP,IAAJ,CAASM,K","sources":["Pages/Staking/styled.tsx","Pages/Staking/staking.tsx","hooks/useWeb3.ts","utils/web3.ts"],"sourcesContent":["import styled from 'styled-components'\nimport { Flex, Heading, Button } from '@metagg/mgg-uikit'\nimport BGimage from '../../assets/background/BGStaking1.png'\n\nexport const Card = styled.div`\n  background-color: #0c012c;\n  border: #008ffd 0.15rem solid;\n  border-radius: 0.5rem;\n  padding: 3rem;\n  z-index: 3;\n  margin: 1rem;\n  text-align: center;\n`\n\nexport const Btn = styled(Button)`\n  border-radius: 2rem;\n  width: 250px;\n  background-color: rgb(0, 196, 204);\n  color: black;\n  box-shadow: 0px 5px 8px #a5630057;\n`\n\nexport const InformativeButton = styled(Button)`\n  width: 150px;\n  height: 45px;\n  margin: 0.5rem 0;\n  position: relative;\n  padding: 1px;\n\n  background-image: linear-gradient(blue, skyblue);\n  border: none;\n  border-radius: 4px;\n  transition: box-shadow 0.3s ease-in-out; /* Smooth transition for the shadow effect */\n\n  &:hover {\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3); /* Add shadow on hover */\n  }\n`;\n\n\n\nexport const CardContainer = styled.div`\n  flex: 1;\n  max-width: 26rem;\n  min-width: 16rem;\n  position: relative;\n`\n\nexport const RdmapList = styled.ul`\n  text-align: left;\n  color: white;\n  list-style-type: none;\n  line-height: 1.5;\n  font-weight: 400;\n`\n\nexport const CheckList = styled.li`\n  padding: 1rem 0 0 1rem;\n  &:before{\n    content: \"✔\";\n    color: #06ff65;\n    font-weight: bold;\n    display: inline-block;\n    width: 1rem;\n    margin-left: -1rem;\n  }\n`\n\nexport const List = styled.li`\n  padding: 1rem 0 0 1rem;\n  &:before{\n    content: \"●\";\n    color: #fdda00;\n    font-weight: bold;\n    display: inline-block;\n    width: 1rem;\n    margin-left: -1rem;\n  }\n`\n\nexport const BgPage = styled.div<{padding?: string}>`\n  padding: ${({padding}) => padding ? padding: '5rem 0'};\n  text-align: center;\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  position: relative;\n  & .pad-5rem {\n    padding: 3rem;\n    @media screen and (max-width: 500px) {\n      padding: 2rem 0;\n    }\n  }\n  & .pad-10rem {\n    padding: 10rem;\n    @media screen and (max-width: 500px) {\n      padding: 5rem 0;\n    }\n  }\n  &:before {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 0;\n    background-image: url(${BGimage});\n    background-repeat: no-repeat;\n    background-position: center;\n    background-size: cover;\n  }\n\n  @media screen and (max-width: 500px) {\n    padding: 0.5rem;\n  }\n`\n\n\nexport const HeadingGlow = styled(Heading)<{ glow?: string }>`\n  text-shadow: 0 0 0.5rem ${({ glow }) => (glow ??'#00f4fd')};\n`\n","import React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { Flex, Heading, Text } from '@metagg/mgg-uikit';\nimport styled, { ThemeContext } from 'styled-components';\nimport { BgPage, Btn, Card, HeadingGlow, InformativeButton } from './styled';\nimport useWeb3 from \"../../hooks/useWeb3\";\nimport { getBalanceAmount, getBalanceNumber, toBigNumber } from \"../../utils/formatBalance\";\nimport LogoRonin from '../../assets/images/Logo_Ronin.png';\nimport CarvIcon from '../../assets/images/Logo_Carv.png';\nimport DymIcon from '../../assets/images/Logo_Dymension.png';\nimport StakingImg from '../../assets/images/Staking.png';\nimport Page from 'components/layout/Page';\n\nconst TableDesc = styled.div`\n  text-align: center;\n  font-size: 1.2rem;\n\n  @media screen and (max-width: 600px) {\n    font-size: 1rem;\n  }\n`;\n\nconst TableDesc2 = styled.div`\n  text-align: center;\n  font-size: 1.2rem;\n  color: white;\n\n  @media screen and (max-width: 600px) {\n    font-size: 0.8rem;\n  }\n`;\n\nconst DescText = styled.div`\n  margin-top: 0.5rem;\n  font-size: 1.2rem;\n  color: white;\n\n  @media screen and (max-width: 500px) {\n    font-size: 1rem;\n  }\n`;\n\nconst InfoSection = styled(Flex)`\n  margin-top: 1.5rem;\n  font-size: 1rem;\n  color: white;\n  text-align: justify;\n\n  @media screen and (max-width: 768px) {\n    margin-top: 1rem;\n    font-size: 0.9rem;\n    text-align: left; /* Align text left for mobile */\n  }\n`;\n\nconst TableRow = styled(Flex)`\n  padding: 1rem;\n  border: 1px solid #1E90FF;\n  border-radius: 8px;\n  background-color: #0c0f2c;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  max-width: 1200px;\n  margin-bottom: 1rem;\n\n  @media screen and (max-width: 600px) {\n    flex-direction: column;\n    align-items: center;\n    padding: 0.75rem; /* Adjust padding for smaller screens */\n  }\n`;\n\nconst TableRowContent = styled(Flex)`\n  align-items: center;\n  gap: 1rem;\n\n  @media screen and (max-width: 600px) {\n    flex-direction: column;\n    gap: 1.5rem; /* Reduce gap for mobile */\n  }\n`;\n\nconst StakingCard = styled(Card)`\n  padding: 2rem;\n  text-align: center;\n  border: 1px solid #1E90FF;\n  background-color: #0c0f2c;\n  width: 100%;\n  max-width: 400px;\n  margin: 1rem;\n  transition: background-color 0.3s ease; /* Smooth transition */\n  &:hover {\n    background-color: #000058;\n  }\n  @media screen and (max-width: 600px) {\n    padding: 1.5rem; /* Adjust padding */\n    margin: 0.5rem; /* Adjust margin */\n    width: 100%; /* Ensure it takes full width */\n  }\n`;\n\n\nconst Staking: React.FC = () => {\n  const theme = useContext(ThemeContext);\n  const web3 = useWeb3();\n  const [requestedMint, setRequestMint] = useState(false);\n  const [price, setPrice] = useState(\"TBA\");\n  const [totalStake, setTotalStake] = useState(\"TBA\");\n  const [apr, setApr] = useState(\"TBA\");\n\n  useEffect(() => {\n    // Fetch data or perform other effects\n  }, []);\n\n  return (\n    <Page>\n    <BgPage padding=\"0\">\n      <div style={{ position: 'relative', zIndex: 2 }}>\n        <div style={{ margin: '0rem 0', padding: window.innerWidth <= 768 ? '0rem' : '8rem', paddingTop: window.innerWidth <= 768 ? '5rem' : '8rem', }}>\n          <div style={{ display: 'inline-flex', gap: '50px', justifyContent: 'space-around', flexWrap: 'wrap' }}>\n            <div style={{ textAlign: 'left', alignContent: 'center' }}>\n              <HeadingGlow size=\"xxl\" color=\"#fdda00\" glow=\"#fdda00\" marginBottom= '1rem'>\n                Earn Staking Rewards\n              </HeadingGlow>\n              <br />\n              <DescText>Stake your RON, CARV, and earn rewards.</DescText>\n            </div>\n            <div style={{ margin: '10px' }}>\n              <img src={StakingImg} alt=\"Guild Rewards\" width={300} />\n            </div>\n          </div>\n\n          <Flex flexDirection=\"column\" alignItems=\"center\" style={{ margin: '5rem 0 3rem 0rem' }}>\n            <TableRow>\n              <TableRowContent>\n                <img src={LogoRonin} alt=\"RON\" style={{ width: '50px', height: '50px' }} />\n                <Heading size=\"xl\" color=\"white\">RON</Heading>\n              </TableRowContent>\n              <Flex\n                    style={{\n                      gap: window.innerWidth <= 768 ? '3rem' : '12rem', // Adjust gap for mobile view\n                      color: '#FFD700',\n                      paddingRight: window.innerWidth <= 768 ? '0rem' : '10rem', // Adjust paddingRight for mobile view\n                      paddingTop: window.innerWidth <= 768 ? '3rem' : '0rem', \n                      alignItems: 'center',\n                    }}\n                  >\n                <div style={{ display: 'flex', flexDirection: 'column', color: '#FFD700' }}>\n                  <TableDesc color=\"#fdda00\">Price:</TableDesc>\n                  <TableDesc2>$1.38</TableDesc2>\n                </div>\n                <div style={{ display: 'flex', flexDirection: 'column', color: '#FFD700' }}> \n                  <TableDesc color=\"#fdda00\">Total Stake:</TableDesc>\n                  <TableDesc2>2,027,547 RON</TableDesc2>\n                </div>\n                <div style={{ display: 'flex', flexDirection: 'column', color: '#FFD700' }}> \n                  <TableDesc color=\"#fdda00\">APR:</TableDesc>\n                  <TableDesc2>10.95/9.59%</TableDesc2>\n                </div>\n              </Flex>\n            </TableRow>\n          </Flex>\n\n          <Flex justifyContent=\"center\" flexWrap=\"wrap\" style={{ gap: '1rem' }}>\n            <StakingCard style={{ minHeight: '420px', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n              <img src={LogoRonin} alt=\"RONIN\" style={{ width: '95px', height: '95px', marginBottom: '2rem' }} />\n              <Heading size=\"l\" color=\"cyan\"marginTop={\"1rem\"}>RONIN</Heading>\n              <InfoSection color=\"white\" style={{ textAlign: 'justify' }}>\n                Ronin Token is the native cryptocurrency of the Ronin blockchain, designed specifically for gaming and digital asset ownership.\n              </InfoSection>\n              <a href=\"https://app.roninchain.com/validator/0xea94e2f3f1b24214f9d9bfb5608084476f34d48a\" style={{ textDecoration: 'none', marginTop: 'auto' }}>\n                <InformativeButton style={{ marginTop: '2rem' }}>Stake</InformativeButton>\n              </a>\n            </StakingCard>\n            <StakingCard style={{ minHeight: '420px', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n              <img src={CarvIcon} alt=\"CARV\" style={{ width: '95px', height: '95px', marginBottom: '2rem' }} />\n              <Heading size=\"l\" color=\"cyan\" marginTop={\"1rem\"}>CARV</Heading>\n              <InfoSection color=\"white\" style={{ textAlign: 'justify' }}>\n                Carv Token is a utility cryptocurrency designed to enhance the Carv ecosystem, which focuses on decentralized social networking and user-generated content.\n              </InfoSection>\n              <a href=\"https://explorer.carv.io/verifiers\" style={{ textDecoration: 'none', marginTop: 'auto' }}>\n                <InformativeButton style={{ marginTop: '2rem' }}>Stake</InformativeButton>\n              </a>\n            </StakingCard>\n          </Flex>\n        </div>\n      </div>\n    </BgPage>\n    </Page>\n  );\n};\n\nexport default Staking;\n","import {useEffect, useRef, useState} from 'react'\nimport Web3 from 'web3'\nimport {useWeb3React} from '@web3-react/core'\nimport {getWeb3NoAccount} from 'utils/web3'\n\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the provider change\n */\nconst useWeb3 = () => {\n    const {library, chainId} = useWeb3React()\n    const refEth = useRef(library)\n    const web3NoAccount = getWeb3NoAccount(chainId?.toString())\n    const [web3, setweb3] = useState(library ? new Web3(library) : web3NoAccount)\n\n    useEffect(() => {\n        if (library !== refEth.current) {\n            setweb3(library ? new Web3(library) : web3NoAccount)\n            refEth.current = library\n        }\n    }, [library])\n\n    return web3\n}\n\nexport default useWeb3\n","import Web3 from 'web3'\nimport {HttpProviderOptions} from 'web3-core-helpers'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nexport const getWeb3NoAccount = (chainId, web3?: Web3) => {\n    const RPC_URL2 = getRpcUrl(chainId)\n    const provider = new Web3.providers.HttpProvider(RPC_URL2, { timeout: 10000 } as HttpProviderOptions)\n\n    return new Web3(provider)\n}\n"],"names":["Card","styled","InformativeButton","Button","BgPage","padding","BGimage","HeadingGlow","Heading","glow","TableDesc","TableDesc2","DescText","InfoSection","Flex","TableRow","TableRowContent","StakingCard","useContext","ThemeContext","useWeb3","useState","useEffect","Page","style","position","zIndex","margin","window","innerWidth","paddingTop","display","gap","justifyContent","flexWrap","textAlign","alignContent","size","color","marginBottom","src","StakingImg","alt","width","flexDirection","alignItems","LogoRonin","height","paddingRight","minHeight","marginTop","href","textDecoration","useWeb3React","library","chainId","refEth","useRef","web3NoAccount","getWeb3NoAccount","toString","Web3","web3","setweb3","current","RPC_URL2","getRpcUrl","provider","timeout"],"sourceRoot":""}